#include <map>
#include <queue>
#include <vector>
/************************************************************

    Following is the TreeNode class structure:

    template <typename T>
    class TreeNode
    {
    public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T dat)
        {
            this->data = dat;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

vector<int> getTopView(TreeNode<int> *root)
{
    vector<int> ans;
    if (!root)
        return ans;

    map<int, int> topNode;
    queue<pair<TreeNode<int>*, int>> q;
    q.push(make_pair(root, 0));

    while (!q.empty()) {
        auto temp = q.front();
        q.pop();
        TreeNode<int>* frontNode = temp.first;
        int hor = temp.second;

        if (topNode.find(hor) == topNode.end())
            topNode[hor] = frontNode->data;
        if (frontNode->left)
            q.push(make_pair(frontNode->left, hor - 1));
        if (frontNode->right)
            q.push(make_pair(frontNode->right, hor + 1));
    }

    for (auto i : topNode) {
        ans.push_back(i.second);
    }

    return ans;
}
