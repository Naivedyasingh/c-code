#include <iostream>
#include <unordered_map>
#include <list>
using namespace std;

class Graph {
public:
    unordered_map<int, list<int>> adj;

    void addEdge(int u, int v, bool direction) {
        // create an edge from u to v
        adj[u].push_back(v);

        if (direction==0) {
            // if it's an undirected graph, add an edge from v to u as well
            adj[v].push_back(u);
        }
    }

    void printAdjList(){
        for(auto i : adj) {
            cout << i.first << " -> ";

            for(auto j : i.second) {
                cout << j << ",";
            }

            cout << endl;
        }
    }
};

int main() {
    int n, m;

    cout << "Enter the number of nodes: ";
    cin >> n;

    cout << "Enter the number of edges: ";
    cin >> m;

    Graph G;

    cout << "Enter edges (source destination):" << endl;
    for(int i = 0; i < m; i++) {
        int u, v;
        cin >> u >> v;
        G.addEdge(u, v, 0); // Assuming all edges are undirected
    }

    // Printing graph
    G.printAdjList();

    return 0;
}
