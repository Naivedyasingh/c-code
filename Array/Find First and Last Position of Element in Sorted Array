#include <iostream>
#include <vector>

using namespace std;

vector<int> findFirstAndLast(const vector<int>& arr, int x) {
    vector<int> result = {-1, -1};
    int left = 0, right = arr.size() - 1;
    
    // Binary search for the first occurrence
    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (arr[mid] == x) {
            result[0] = mid;
            right = mid - 1;
        } else if (arr[mid] < x) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }
    
    // Reset pointers for the second binary search
    left = 0;
    right = arr.size() - 1;
    
    // Binary search for the last occurrence
    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (arr[mid] == x) {
            result[1] = mid;
            left = mid + 1;
        } else if (arr[mid] < x) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }
    
    return result;
}

int main() {
    vector<int> arr = {1, 2, 4, 4, 5};
    int x = 4;
    vector<int> indices = findFirstAndLast(arr, x);
    
    cout << indices[0] << " " << indices[1] << endl; // Output: 2 3
    
    return 0;
}
