#include <iostream>
#include <vector>

using namespace std;

int countOccurrences(vector<int> arr, int x) {
    int n = arr.size();
    int left = -1, right = -1;

    // Find the leftmost occurrence of x
    int low = 0, high = n - 1;
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (arr[mid] == x) {
            left = mid;
            high = mid - 1; // Continue searching in the left half
        } else if (arr[mid] < x) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }

    // If x is not found, return 0
    if (left == -1) return 0;

    // Find the rightmost occurrence of x
    low = 0, high = n - 1;
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (arr[mid] == x) {
            right = mid;
            low = mid + 1; // Continue searching in the right half
        } else if (arr[mid] < x) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }

    // Return the count of occurrences of x
    return right - left + 1;
}

int main() {
    int T;
    cin >> T;

    while (T--) {
        int N, X;
        cin >> N;

        vector<int> arr(N);
        for (int i = 0; i < N; ++i) {
            cin >> arr[i];
        }

        cin >> X;

        int count = countOccurrences(arr, X);
        cout << count << endl;
    }

    return 0;
}

