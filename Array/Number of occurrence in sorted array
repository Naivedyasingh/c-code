#include <iostream>
#include <vector>

int count(std::vector<int>& arr, int n, int x) {
    // Find the first occurrence of x
    int first = -1;
    int low = 0, high = n - 1;
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (arr[mid] == x) {
            first = mid;
            high = mid - 1;
        } else if (arr[mid] < x) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    
    if (first == -1) // If x is not present in the array
        return 0;
    
    // Find the last occurrence of x
    int last = -1;
    low = 0, high = n - 1;
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (arr[mid] == x) {
            last = mid;
            low = mid + 1;
        } else if (arr[mid] < x) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    
    // Return the count of occurrences of x
    return last - first + 1;
}

int main() {
    std::vector<int> arr = {1, 1, 1, 2, 2, 3, 3};
    int n = arr.size();
    int x = 3;
    std::cout << "Number of occurrences of " << x << ": " << count(arr, n, x) << std::endl;
    return 0;
}
